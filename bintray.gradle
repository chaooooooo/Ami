// backup of [https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle]

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        options.encoding "UTF-8"
        options.charSet 'UTF-8'
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options.links("http://docs.oracle.com/javase/7/docs/api/")
        options.linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        options.addStringOption('Xdoclint:none', '-quiet')
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        failOnError = false
    }

} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publish = true
        publicDownloadNumbers = true
        version {
            name = libraryVersion
            vcsTag = ""
            released = new Date()
            desc = libraryDescription
        }
    }
}
